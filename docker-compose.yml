version: "3.7"

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  sql.data:
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    image: mysql/mysql-server:latest
    ports:
      - "3306:3306"
    networks:
      - default
    restart: always
    volumes:
      - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d

  rabbitmq.data:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${LIFECMS_RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${LIFECMS_RABBITMQ_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/provision/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  identity.api:
    image: lifecms/identity.api:latest
    entrypoint: /bin/sh -c "waitforit.sh sql.data:3306 -- dotnet /app/Identity.API.dll"
    ports:
      - "5002:80"
    environment:
      SQL_DB_HOST: sql.data
      ConnectionStrings__LifeCMSIdentity: Server=sql.data;Database=lifecms_identity;Uid=lifecms_user;Password=lifecms_pass;AllowUserVariables=True;
      ConnectionStrings__LifeCMSIdentityServer: Server=sql.data;Database=lifecms_identity_server;Uid=lifecms_user;Password=lifecms_pass;AllowUserVariables=True;
      IdentityServerAuthentication__Authority: ${LIFECMS_VHOST_IDENTITY}
      ApiResources_0_Name: WebApi
      ApiResources_0_Scopes_0_Name: post:read
      ApiResources_0_Scopes_0_DisplayName: "Read access to the Post resource"
      Clients__WebApiClient__AllowedCorsOrigins__0: http://${LIFECMS_VHOST_WEBSPA}
      Clients__WebApiClient__AllowedScopes__0: post:read
      Clients__WebApiClient__ClientId: WebApiClient
      Clients__WebApiClient__ClientName: WebApiClient
      Clients__WebApiClient__PostLogoutRedirectUris__0: http://${LIFECMS_VHOST_WEBSPA}/signout-callback-oidc
      Clients__WebApiClient__RedirectUris__0: http://${LIFECMS_VHOST_WEBSPA}/session/oauth_callback
      Clients__WebApiClient__RequireConsent: "false"
      Clients__WebApiClient__RequireClientSecret: "false"
      Certificates__SigningCredential: ${LIFECMS_CERTIFICATE_SIGNING_CREDENTIAL}
      EventBus__HostName: rabbitmq.data
      EventBus__Username: ${LIFECMS_RABBITMQ_USERNAME}
      EventBus__Password: ${LIFECMS_RABBITMQ_PASSWORD}
      EventBus__QueueName: ${LIFECMS_EVENTBUS_QUEUENAME}
      ApiHost__Identity: http://${LIFECMS_VHOST_IDENTITY}
      Host__WebSpa: http://${LIFECMS_VHOST_WEBSPA}
      VIRTUAL_HOST: ${LIFECMS_VHOST_IDENTITY}
      VIRTUAL_PORT: 80
    depends_on:
      - sql.data
    networks:
      - default
    volumes:
      - type: bind
        source: ./docker/waitforit.sh
        target: /usr/local/bin/waitforit.sh

  email.api:
    image: lifecms/email.api:latest
    entrypoint: /bin/sh -c "waitforit.sh rabbitmq.data:5672 -- dotnet /app/Email.API.dll"
    ports:
      - "5003:80"
    environment:
      VIRTUAL_HOST: ${LIFECMS_VHOST_EMAIL}
      VIRTUAL_PORT: 80
      EventBus__HostName: rabbitmq.data
      EventBus__Username: ${LIFECMS_RABBITMQ_USERNAME}
      EventBus__Password: ${LIFECMS_RABBITMQ_PASSWORD}
      EventBus__QueueName: ${LIFECMS_EVENTBUS_QUEUENAME}
      Email__Provider: ${LIFECMS_EMAIL_PROVIDER}
      Email__Smtp__Host: ${LIFECMS_EMAIL_SMTP_HOST}
      Email__Smtp__Port: ${LIFECMS_EMAIL_SMTP_PORT}
      Email__SendGrid__ApiKey: "${LIFECMS_EMAIL_SENDGRID_APIKEY}"
      Email__SendGrid__From__EmailAddress: "${LIFECMS_EMAIL_SENDGRID_FROM_EMAIL}"
      Email__SendGrid__From__Name: "${LIFECMS_EMAIL_SENDGRID_FROM_NAME}"
      Identity__Email__FromEmailAddress: "${LIFECMS_IDENTITY_EMAIL_FROM_EMAIL_ADDRESS}"
    networks:
      - default
    depends_on:
      - rabbitmq.data
    volumes:
      - type: bind
        source: ./docker/waitforit.sh
        target: /usr/local/bin/waitforit.sh

  contentcreation.api:
    image: lifecms/contentcreation.api:latest
    entrypoint: /bin/sh -c "waitforit.sh sql.data:3306 -- dotnet /app/ContentCreation.API.dll"
    ports:
      - "5001:80"
    environment:
      SQL_DB_HOST: sql.data
      VIRTUAL_HOST: ${LIFECMS_VHOST_CONTENTCREATION}
      EventBus__HostName: rabbitmq.data
      EventBus__Username: ${LIFECMS_RABBITMQ_USERNAME}
      EventBus__Password: ${LIFECMS_RABBITMQ_PASSWORD}
      EventBus__QueueName: ${LIFECMS_EVENTBUS_QUEUENAME}
      Cors__Websocket__AllowedOrigins__0: ${LIFECMS_CORS_WEBSOCKET_ALLOWED_ORIGIN}
      IdentityServerAuthentication__ApiName: "WebApi"
      IdentityServerAuthentication__RequireHttpsMetadata: "false"
      IdentityServerAuthentication__Authority: ${LIFECMS_IDENTITY_SERVER_AUTHORITY}
      ConnectionStrings__LifeCMS: Server=sql.data;Database=lifecms_production;Uid=lifecms_user;Password=lifecms_pass;AllowUserVariables=True;
      Certificates__SigningCredential: ${LIFECMS_CERTIFICATE_SIGNING_CREDENTIAL}
      ContentCreation__Email__FromEmailAddress: "${LIFECMS_CONTENTCREATION_EMAIL_FROM_EMAIL_ADDRESS}"
      VIRTUAL_PORT: 80
    depends_on:
      - sql.data
    extra_hosts:
      - "${LIFECMS_VHOST_IDENTITY}:172.20.0.200"
    networks:
      - default
    volumes:
      - type: bind
        source: ./docker/waitforit.sh
        target: /usr/local/bin/waitforit.sh

  web.webspa:
    image: lifecms/web-spa:latest
    ports:
      - "5000:80"
    volumes:
      - ./docker:/usr/local/bin/docker
    environment:
      REACT_APP_RUNTIME_API_HOST: ${LIFECMS_ORIGIN_CONTENTCREATION}/api
      REACT_APP_RUNTIME_AUTHORITY: ${LIFECMS_IDENTITY_SERVER_AUTHORITY}
      REACT_APP_RUNTIME_CLIENT_ID: WebApiClient
      REACT_APP_RUNTIME_POST_LOGOUT_REDIRECT_URI: ${LIFECMS_ORIGIN_WEBSPA}
      REACT_APP_RUNTIME_REDIRECT_URI: ${LIFECMS_ORIGIN_WEBSPA}/session/oauth_callback
      REACT_APP_RUNTIME_RESPONSE_TYPE: code
      REACT_APP_RUNTIME_SCOPE: post:read
      REACT_APP_RUNTIME_WEBSOCKET_HOST: ${LIFECMS_ORIGIN_CONTENTCREATION}/services/websocket
      VIRTUAL_HOST: ${LIFECMS_VHOST_WEBSPA}
      VIRTUAL_PORT: 80
    networks:
      - default

  nginx-proxy:
    container_name: proxy
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      default:
        ipv4_address: 172.20.0.200
